name: Build

on:
  pull_request:
  push:
    branches: [main, betatest]
  workflow_dispatch:

jobs:
  build:
  
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/betatest' }}
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: "adopt"

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build the app
        run: ./gradlew assembleDebug --stacktrace

      - name: Upload artifact
        uses: actions/upload-artifact@v3

        with:
          name: app
          path: app/build/outputs/apk/debug/app-debug.apk
          retetion-days: 30

  make_sign_apk:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: 17
        distribution: "adopt"
        
    - uses: android-actions/setup-android@v2
    
    - name: Make gradlew executable
      run: chmod +x ./gradlew

    - name: Build release APK
      if: success()
      run: ./gradlew assembleRelease

    - name: Clearing
      if: success()
      run: |
        for filename in app/build/outputs/apk/release/*.apk; do mv "./$filename" "./$(echo "$filename" | sed -e 's/-unsigned//g')";  done
    
    - name: Sign APK
      if: success()
      uses: r0adkll/sign-android-release@v1
      id: sign_app
      with:
        releaseDirectory: app/build/outputs/apk/release
        signingKeyBase64: ${{ secrets.SIGNING_KEY }}
        alias: ${{ secrets.SIGNING_KEY_ALIAS }}
        keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
        keyPassword: ${{ secrets.KEY_PASSWORD }}
      env:
        BUILD_TOOL_VERSION: "30.0.2"

    - name: Upload APK
      if: success()
      uses: actions/upload-artifact@v3
      with:
        name: app-release
        path: app/build/outputs/apk/release/*-signed.apk
        retention-days: 30

  # download-and-send:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout the code
  #       uses: actions/checkout@v2

  #     - name: Download artifact
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: app
  #         path: my-artifact

  #     - name: Display structure of downloaded files
  #       run: ls -R

  #     - name: Install curl
  #       run: sudo apt install curl

  #     - name: Send to tg
  #       run: curl -F "document=@my-artifact/app-debug.apk" -F "chat_id=${{ secrets.TELEGRAM_TO }}" https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendDocument
